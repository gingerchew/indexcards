---
import Layout from '../layouts/Layout.astro';
import { nanoid } from 'nanoid';
import { db, User } from 'astro:db';
import { eq } from 'astro:db';
import { FlashCards } from 'astro:db';
import LoginForm from '@/components/LoginForm.astro';
import CreateCardForm from '@/components/CreateCardForm.astro';

let data:Record<string, any> = {}, flashCardArr:any[] = [], user: typeof User|boolean = false;
try {
	const fd = await Astro.request.formData();
	
	if (fd) {
		data = {
			id: nanoid(),
		};
		
		for (const [name, value] of fd.entries()) {
			console.log({name, value})
			data[name] = value;
		}
		
		const resultArr = await db.select().from(User).limit(1).where(eq(User.username, data.username));
		// @ts-ignore
		user = resultArr[0];
		
		if (!user) {
			data.lastLoggedIn = 0;
			
			// @ts-ignore
			await db.insert(User).values(data)
			user = data as typeof User;
		} else {
			// @ts-ignore
			data = user;
			console.log(user);
			// @ts-ignore
			const cardsFromDb = await db.select().from(FlashCards).where(eq(FlashCards.by, user.id));

			cardsFromDb.forEach(({ config }) => flashCardArr.push(config));
		}
	}
} catch(e:any) { console.log(e.message) }

---
<Layout title="Welcome to Astro.">
	<main>
		<h1>Get your flash cards ready!</h1>
		<button id="loginToggle">Login</button>
		<dialog id="loginDialog">
			<LoginForm />
		</dialog>
		{!!user && <CreateCardForm id={(user as typeof User).id} />}
		<output>{JSON.stringify(data)}</output>
	</main>
</Layout>
<script>
	import { getById } from "../lib/traversal";
	
	const loginToggle = getById<HTMLButtonElement>('loginToggle')!;
	const loginDialog = getById<HTMLDialogElement>('loginDialog')!;

	loginToggle.addEventListener('click', () => {
		loginDialog.showModal();
	});

	loginDialog.addEventListener('close', () => {
		console.log(loginDialog.returnValue);
	})
</script>
<style>
	main {
		margin: auto;
		padding: 1rem;
		width: 800px;
		max-width: calc(100% - 2rem);
		font-size: 20px;
		line-height: 1.6;
	}

	dialog {
		max-width: 75vw;
		padding: 2.5vmin 1.5vmax;
	}
</style>
